# build.yaml: GitHub Actions CPP workflow for Aniray
#
# Created by Perry Naseck on 2022-11-08.
#
# This file is a part of Aniray
# https://github.com/HypersonicED/aniray
#
# Copyright (c) 2022, Hypersonic
# Copyright (c) 2022, Perry Naseck
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: CPP
on: [push, pull_request]

jobs:
  lint-build-clang:
    name: Lint Debug clang
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    container: "debian:bullseye"
    steps:
      - name: Get number of CPU cores
        run: echo "::set-output name=NUM_CPU_CORES::$(grep -c processor /proc/cpuinfo)"
        id: num-cpu-cores
      - name: Update apt
        run: apt-get update
      - name: Install git and sudo
        run: apt-get install -y git sudo
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install Build Dependencies
        run: sudo apt-get install -y cmake build-essential gdb clang
      - name: Install App Dependencies
        run: sudo apt-get install -y libola-dev libboost-dev libboost-log-dev libssl-dev libmodbus-dev
      - name: Build and Lint Aniray
        env:
          CC: "/usr/bin/clang"
          CXX: "/usr/bin/clang++"
        run: cmake -H. -B_builds/Debug -DCMAKE_BUILD_TYPE=Debug -DANIRAY_WITH_LINT=ON && cmake --build _builds/Debug --parallel ${{ steps.num-cpu-cores.outputs.NUM_CPU_CORES }}
      - name: Display structure of build files
        run: ls -R
        working-directory: _builds
      - name: SHA256 files
        run: find . -type f -exec sha256sum {} \;
        working-directory: _builds
  build:
    name: Build ${{ matrix.build_type }} ${{ matrix.compiler.name }}
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
          - RelWithDebInfo
          - MinSizeRel
        compiler:
          - name: clang
            CC: "/usr/bin/clang"
            CXX: "/usr/bin/clang++"
          - name: gcc
            CC: "/usr/bin/gcc"
            CXX: "/usr/bin/g++"
    runs-on: ubuntu-latest
    container: "debian:bullseye"
    steps:
      - name: Get number of CPU cores
        run: echo "::set-output name=NUM_CPU_CORES::$(grep -c processor /proc/cpuinfo)"
        id: num-cpu-cores
      - name: Update apt
        run: apt-get update
      - name: Install git and sudo
        run: apt-get install -y git sudo
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install Build Dependencies
        run: sudo apt-get install -y cmake build-essential gdb clang g++
      - name: Install App Dependencies
        run: sudo apt-get install -y libola-dev libboost-dev libboost-log-dev libssl-dev libmodbus-dev
      - name: Build Aniray
        env:
          CC: ${{ matrix.compiler.CC }}
          CXX: ${{ matrix.compiler.CXX }}
        run: cmake -H. -B_builds/${{ matrix.build_type }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} && cmake --build _builds/${{ matrix.build_type }} --parallel ${{ steps.num-cpu-cores.outputs.NUM_CPU_CORES }}
      - name: Display structure of build files
        run: ls -R
        working-directory: _builds
      - name: SHA256 files
        run: find . -type f -exec sha256sum {} \;
        working-directory: _builds
      - uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.build_type }}-${{ matrix.compiler.name }}
          path: _builds/${{ matrix.build_type }}/*
